syntax = "proto3";
package io.axoniq.axonserver.grpc.event.dcb;
option java_multiple_files = true;

service DcbEventStore {
  rpc AppendEvent (stream AppendEventsRequest) returns (AppendEventsResponse) {

  }
}

message AppendEventsRequest {
  oneof request {
    ConsistencyCondition condition = 1;
    TaggedEvent event = 2;
  }
}

message TaggedEvent {
  Event event = 1;
  string type = 2;
  repeated Tag tags = 3;
}

message Tag {
  bytes key = 1;
  bytes value = 2;
}

message Event {
  /* The unique identifier of this event */
  string identifier = 1;
  /* The Payload of the Event */
  bytes payload = 2;
}

message TimestampedEvent {
  int64 timestamp = 1;
  TaggedEvent event = 2;
}

message ConsistencyCondition {
  Position consistency_marker = 1;
  StreamQuery stream_query = 2;
}

message Position {
  int64 sequence = 1;
}

message StreamQuery {
  repeated Criterion criteria = 1;
}

message Criterion {
  string type = 1;
  repeated Tag tags = 2;
}

message AppendEventsResponse {
  Position lastPosition = 1;
}